class Solution:
    def uniquePaths(self, m: int, n: int) -> int:
        #-----------------------------Space optimization-------------------
        #  pev=[0]*n
        # for i in range(m):
        #     curr=[0]*n
        #     for j in range(n):
        #         if i==0 and j==0:
        #             curr[j]=1
        #             continue
        #         up,left=0,0
        #         if i>0:
        #             up=prev[j]
        #         if j>0:
        #             left=curr[j-1]
        #         curr[j]=up+left
        #     prev=curr
        # return prev[n-1]
        # ---------------------------Tabulation--------------
        dp=[[0]*n for _ in range(m)]
        for i in range(m):
            for j in range(n):
                if i==0 and j==0:
                    dp[i][j]=1
                    continue
                up,left=0,0
                if i>0 :
                    up=dp[i-1][j]
                if j>0:
                    left=dp[i][j-1]
                dp[i][j]=up+left
        return dp[m-1][n-1]
                    
                
