class Solution:
    # ---------------------Tabulization-------------------
    def rob(self, nums: List[int]) -> int:
        n=len(nums)
        dp=[-1]*n
        for i in range(n):
            pick=nums[i]
            if i>1:
                pick+=dp[i-2]
            notpick=dp[i-1]
            dp[i]=max(pick,notpick)
        return dp[n-1]
    # --------------------------Space otipimization---------------------
    # prev=nums[0]
    # prev2=0
    # for i in range(1,n):
    #     pick=nums[i]
    #     if i>1:
    #         pick+=prev2
    #     notpick=0+prev
    #     curr=max(pick,notpick)
    #     prev2=prev
    #     prev=curr
# -----------------------------Memoziation-------------------
#     def func(ind,dp):
#         if ind==0:
#             return nums[0]
#         if ind<0:
#             return 
#         if dp[ind]!=-1:
#             return dp[ind]
#         pick=nums[ind]+func(ind-2,dp)
#         notpick=func(ind-1,dp)
#         return dp=max(pick,notpick)
